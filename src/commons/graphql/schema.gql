# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BoardTag {
  boardTagName: String!
  boardTagRefName: REF_Name_ENUM!
}

enum REF_Name_ENUM {
  MENU
  REGION
  MOOD
}

type BoardSide {
  boardSide: String!
  tagName: String!
  boardTags: BoardTag!
}

type Store {
  storeId: String!
  storeName: String!
  storeAddress: String!
  storeAddressInfo: String!
}

type Board {
  boardId: Int!
  boardTitle: String!
  boardSugar: String!
  boardSalt: String!
  boardContents: String!
  boardWriter: String!
  boardLikeCount: Int!
  boardHit: Int!
  ageGroup: BOARD_AGE_GROUP_ENUM!
  gender: BOARD_GENDER_ENUM!
  createAt: DateTime!
  updateAt: DateTime!
  stores: Store!
  boardSides: [BoardSide!]!
}

enum BOARD_AGE_GROUP_ENUM {
  TEN
  TWENTY
  THIRTY
  FORTY
  FIFTY
  SIXTY
  NONE
}

enum BOARD_GENDER_ENUM {
  MALE
  FEMALE
  PRIVATE
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type fewUser {
  userEmail: String!
  userCreateAt: DateTime!
}

type User {
  userId: String!
  userState: Boolean!
  userEmail: String!
  userName: String!
  userNickname: String!
  userImage: String!
  userPhone: String!
  userAddress: String!
  userPoint: Int!
  ageGroup: BOARD_AGE_GROUP_ENUM!
  gender: BOARD_GENDER_ENUM!
  createAt: DateTime!
  updateAt: DateTime!
}

type Token {
  accessToken: String!
}

type Comment {
  commentId: String!
  commentContents: String!
  commentLikeCount: Int!
}

type CommentLike {
  commentLikeCountId: String!
}

type PointTransaction {
  id: String!
  impUid: String
  amount: Int!
  checksum: Int!
  status: POINT_TRANSACTION_STATUS_ENUM!
  user: User!
  createdAt: DateTime!
}

enum POINT_TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

type MessageInfo {
  messageInfoId: String!
  messageInfoTitle: String!
  messageInfoContents: String!
}

type SendMessage {
  messageReceivedUser: String!
  messageInfo: MessageInfo!
  sendAt: DateTime!
}

type ReceivedMessage {
  messageSendUser: String!
  messageState: Boolean!
  messageInfo: MessageInfo!
  sendAt: DateTime!
}

type Query {
  fetchTags(refName: String!): [BoardTag!]!
  fetchBoardWithTags(tags: Tags!): JSONObject!
  fetchBoard(boardId: String!): Board!
  fetchTestBoards(boardTagsInput: BoardTagsInput!): [Board!]!
  fetchGenderBoards(gender: String!, page: Int!): [Board!]!
  fetchAgeGroupBoards(ageGroup: String!, page: Int!): [Board!]!
  fetchAgeGroupWithGenderBoards(gender: String!, ageGroup: String!, page: Int!): [Board!]!
  fetchUser(userEmail: String!): User!
  fetchUsers: [User!]!
  findUser(phone: String!): fewUser!
  fetchUserLoggedIn: User!
  fetchReceivedMessages(page: Int!): [ReceivedMessage!]!
  fetchReceivedMessage(messageInfoId: String!): ReceivedMessage!
  fetchSendMessages(page: Int!): [SendMessage!]!
  fetchSendMessage(messageInfoId: String!): SendMessage!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

input Tags {
  names: [String!]!
}

input BoardTagsInput {
  boardTagMenu: [String!]
  boardTagRegion: [String!]
  boardTagMood: [String!]
}

type Mutation {
  createTags(createTagInput: CreateTagInput!): String!
  createTopCategory: String!
  createSubCategory: String!
  login(userEmail: String!, userPassword: String!): Token!
  restoreAccessToken: Token!
  logout: String!
  signInGetToken(phone: String!): String!
  signInCheckToken(phone: String!, token: String!): Boolean!
  createBoard(createBoardInput: CreateBoardInput!, boardTagsInput: BoardTagsInput!): Board!
  createBoardUserLoggedin(createBoardInput: CreateBoardInput!, createBoardTagsInput: BoardTagsInput!): Board!
  updateBoard(boardId: String!, updateBoardInput: UpdateBoardInput!): Board!
  deleteBoard(boardId: String!): Boolean!
  createBoardLike(boardId: String!): String!
  uploadFile(files: [Upload!]!): [String!]!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  updatePassword(userEmail: String!, password: String!): User!
  deleteUser(userEmail: String!): Boolean!
  restoreUser(userEmail: String!): Boolean!
  sendMessage(sendMessageInput: SendMessageInput!): String!
  deleteSendMessage(messageInfoId: String!): String!
  deleteReceivedMessage(messageInfoId: String!): String!
  createComment(boardId: String!, contents: String!): Comment!
  updateComment(boardId: String!, contents: String!): Comment!
  deleteComment(commentId: String!): String!
  createCommentLike(boardId: String!, commentId: String!): CommentLike!
  createPointTransaction(impUid: String!, amount: Float!): PointTransaction!
  cancelPointTransaction(impUid: String!, amount: Float!, reason: String!): PointTransaction!
}

input CreateTagInput {
  boardTagName: [String!]!
  boardTagRefName: REF_Name_ENUM!
}

input CreateBoardInput {
  boardTitle: String!
  boardSugar: String
  boardSalt: String
  boardContents: String!
  store: String
}

input UpdateBoardInput {
  boardTitle: String
  boardSugar: String
  boardSalt: String
  boardContents: String
  store: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateUserInput {
  userEmail: String!
  userPassword: String!
  userName: String!
  userPhone: String!
  userNickname: String!
  userAddress: String
}

input UpdateUserInput {
  userPassword: String!
  userPhone: String!
  userAddress: String
}

input SendMessageInput {
  title: String!
  contents: String!
  receiveUser: String!
}